#include <msp430fr5739.h>

#include "PCD8544.h"
#include "stdlib.h"
#include "inttypes.h"
#include "math.h"

char i=0 , counter, flag=1;
uint16_t time[2];
int16_t dtime;
float fdistance;
void trigger(void);
void button(void);
char Number[8];

char *NumberToDisplay(int val,int dec_place) {
	int digit;
	int cVal;
	char *ptr;
	int tens;
	counter = 0;
	ptr = Number;
	cVal = val;
	digit = 100;
	while(digit>=1) {
		if(dec_place == counter) {
			*(ptr++) = '.';				// Add a decimal place if given
		}
		if(digit > cVal) {
			tens = 0;
		} else {
			tens = cVal / digit;
		}
		*(ptr++) = '0' + tens;
		cVal -= (tens * digit);
		digit /= 10;
		counter++;
	}
	*ptr = 0;							// Terminate the string
	return Number;
}

#pragma vector=TIMER1_A1_VECTOR
__interrupt void Timer1A1(void)
{

	 if (i == 0  )
		   {
			  time[i]=TA1CCR2;
			  i=1;

		   }
	 else  //is this the falling edge?
		   {
				 time[i]=TA1CCR2; //take second time measure
					 i=0;
						dtime = (time[1]-time[0])/58;
					flag=0;
     time[0]=0;
     time[1]=0;

   }
	 TA1CCTL2 &= ~ CCIFG ;
	 TA1CCTL2 &= ~COV;
     TA1CTL &= ~TAIFG;
}

void trigger(void)
{
									__delay_cycles(150000);
									P3OUT |= BIT0;
									__delay_cycles(20);
									P3OUT &= ~ BIT0;


}

int main (void)
{
  CSCTL0_H = CSKEY >> 8;
	CSCTL1 =  DCOFSEL_3;            // 20MHz
	CSCTL2 = SELM__DCOCLK + SELS__DCOCLK + SELA__DCOCLK;        //  ACLK = MCLK = DCO
	CSCTL3 = DIVM__8 + DIVS__8 + DIVA__8;
	CSCTL4 = XT1OFF;
	 CSCTL0_H = 0;
	__delay_cycles(10);
	WDTCTL = WDTPW + WDTHOLD;

	P1DIR &= ~ BIT3;
	P1SEL1 &= ~ BIT3;
	P1SEL0 |= BIT3;
	P3DIR = BIT0; // P3B0 - trigger trigger - OUT
	P3OUT &= ~	BIT0; // zero trigger
	P4OUT |= BIT0 +BIT1;                      // Configure pullup resistor
	P4DIR &= ~(BIT0 + BIT1);                  // Direction = input
	P4REN |= BIT0 + BIT1;                     // Enable pullup resistor
	TA1CCTL2 |= CM_3 + CCIS_0 + CAP + SCS + CCIE + CCI;
	TA1CTL |= TASSEL_2 + MC_2 + ID_0;
	LCD_init();
	LCD_clear();
	LCD_gotoXY(1,0);
	LCD_writeString("distance");
	_enable_interrupt();
	__delay_cycles(10000);
	trigger();

	while(1){
				NumberToDisplay(dtime,1);
				LCD_gotoXY(20,1);
				LCD_writeString(Number);
				trigger();
	}


}


